local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=439 -(145 + 293) ;local v30;v27=v12(v11(v27,5),v7("\142\225","\101\160\207\66\22"),function(v42) if (v9(v42,2)==(511 -(44 + 386))) then local v99=0;while true do if (v99==0) then v30=v8(v11(v42,1,2 -1 ));return "";end end else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v120=v13(v101,v30);v30=nil;return v120;else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=0;local v103;while true do if (v102==0) then v103=(v43/((1 + 1)^(v44-1)))%(2^(((v45-1) -(v44-1)) + (2 -1))) ;return v103-(v103%(1 + 0)) ;end end else local v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + (774 -(201 + 571)) );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==0) then v54=v34();v55=v34();v53=1;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * 0 ;else local v121=0;while true do if (v121==0) then v58=4 -3 ;v56=0 -0 ;break;end end end elseif (v58==(5272 -3225)) then return ((v57==(0 -0)) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end if (v53==1) then v56=1;v57=(v31(v55,1,1158 -(116 + 1022) ) * (2^32)) + v54 ;v53=2;end if (v53==2) then v58=v31(v55,21,31);v59=((v31(v55,32)==1) and  -1) or 1 ;v53=3;end end end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==3) then return v14(v63);end if (0==v61) then v62=nil;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=1;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end if (v61==2) then v63={};for v112=1, #v62 do v63[v112]=v10(v9(v11(v62,v112,v112)));end v61=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=620 -(555 + 64) ,v68 do local v78=0;local v79;local v80;while true do if (v78==1) then if (v79==1) then v80=v32()~=(859 -(814 + 45)) ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v69[v77]=v80;break;end if (v78==0) then v79=v32();v80=nil;v78=1;end end end v67[7 -4 ]=v32();for v81=1,v34() do local v82=v32();if (v31(v82,1,1)==0) then local v108=0;local v109;local v110;local v111;while true do if (v108==1) then v111={v33(),v33(),nil,nil};if (v109==(931 -(857 + 74))) then local v122=0;while true do if (v122==0) then v111[3]=v33();v111[4]=v33();break;end end elseif (v109==1) then v111[3]=v34();elseif (v109==2) then v111[3]=v34() -(2^16) ;elseif (v109==(1 + 2)) then v111[3]=v34() -(2^(584 -(367 + 201))) ;v111[4]=v33();end v108=2;end if (v108==2) then if (v31(v110,1,1)==1) then v111[2]=v69[v111[929 -(214 + 713) ]];end if (v31(v110,1 + 1 ,2)==1) then v111[3]=v69[v111[3]];end v108=3;end if (0==v108) then v109=v31(v82,2,3);v110=v31(v82,4,6);v108=1;end if (v108==3) then if (v31(v110,3,3)==1) then v111[889 -(261 + 624) ]=v69[v111[4]];end v64[v81]=v111;break;end end end end for v83=1,v34() do v65[v83-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[1 + 2 ];return function(...) local v85=v74;local v86=v75;local v87=v76;local v88=v38;local v89=1;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v105=0,v93 do if (v105>=v87) then v91[v105-v87 ]=v92[v105 + 1 ];else v95[v105]=v92[v105 + 1 ];end end local v96=(v93-v87) + (878 -(282 + 595)) ;local v97;local v98;while true do v97=v85[v89];v98=v97[1];if (v98<=40) then if (v98<=19) then if (v98<=9) then if (v98<=4) then if (v98<=1) then if (v98>0) then local v135=v97[1639 -(1523 + 114) ];do return v95[v135](v21(v95,v135 + 1 ,v97[3]));end else v95[v97[1082 -(1020 + 60) ]][v95[v97[3]]]=v95[v97[4]];end elseif (v98<=2) then local v138=0;local v139;local v140;local v141;local v142;while true do if (2==v138) then for v335=v139,v90 do local v336=0;while true do if (v336==0) then v142=v142 + 1 ;v95[v335]=v140[v142];break;end end end break;end if (v138==1) then v90=(v141 + v139) -1 ;v142=0;v138=2;end if (v138==0) then v139=v97[2 + 0 ];v140,v141=v88(v95[v139](v21(v95,v139 + 1 ,v97[3 -0 ])));v138=1;end end elseif (v98>3) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[2]]=v95[v97[1068 -(68 + 997) ]] + v97[4] ;end elseif (v98<=6) then if (v98==5) then v95[v97[1272 -(226 + 1044) ]]={};else local v144=0;local v145;while true do if (0==v144) then v145=v97[2];v95[v145](v21(v95,v145 + 1 ,v90));break;end end end elseif (v98<=7) then if (v95[v97[8 -6 ]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98>8) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];else local v239=0;local v240;while true do if (v239==0) then v240=v97[2];v95[v240]=v95[v240](v21(v95,v240 + 1 ,v97[3]));break;end end end elseif (v98<=14) then if (v98<=11) then if (v98==10) then v95[v97[6 -4 ]]=v95[v97[3]]%v97[4] ;else do return v95[v97[2]]();end end elseif (v98<=(56 -44)) then if (v95[v97[2]]~=v97[4]) then v89=v89 + 1 ;else v89=v97[2 + 1 ];end elseif (v98==13) then local v242=0;local v243;while true do if (v242==0) then v243=v97[2];v95[v243]=v95[v243](v95[v243 + 1 ]);break;end end elseif (v95[v97[119 -(32 + 85) ]]~=v97[4]) then v89=v89 + (3 -2) ;else v89=v97[3];end elseif (v98<=16) then if (v98>15) then local v147=0;local v148;local v149;local v150;while true do if (v147==1) then v150=v95[v148] + v149 ;v95[v148]=v150;v147=2;end if (v147==0) then v148=v97[2];v149=v95[v148 + 2 ];v147=1;end if (v147==2) then if (v149>0) then if (v150<=v95[v148 + 1 ]) then local v406=0;while true do if (v406==0) then v89=v97[3];v95[v148 + 3 ]=v150;break;end end end elseif (v150>=v95[v148 + 1 ]) then v89=v97[3];v95[v148 + (1750 -(760 + 987)) ]=v150;end break;end end elseif (v95[v97[2 + 0 ]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=(1930 -(1789 + 124))) then v95[v97[768 -(745 + 21) ]][v95[v97[3]]]=v97[4];elseif (v98==18) then v95[v97[2]]();else local v245=0;local v246;local v247;while true do if (1==v245) then for v389=v246 + 1 ,v90 do v15(v247,v95[v389]);end break;end if (v245==0) then v246=v97[2];v247=v95[v246];v245=1;end end end elseif (v98<=(7 + 22)) then if (v98<=24) then if (v98<=21) then if (v98==(7 + 13)) then v95[v97[5 -3 ]]=v97[3] + v95[v97[4]] ;else local v154=0;local v155;local v156;while true do if (1==v154) then for v339=v155 + 1 ,v97[4] do v156=v156   .. v95[v339] ;end v95[v97[2]]=v156;break;end if (v154==0) then v155=v97[3];v156=v95[v155];v154=1;end end end elseif (v98<=22) then v95[v97[2]]=v72[v97[11 -8 ]];elseif (v98>23) then local v248=v97[2];v95[v248]=v95[v248]();else v95[v97[2]]=v97[3];end elseif (v98<=26) then if (v98==(982 -(892 + 65))) then v95[v97[1 + 1 ]]= #v95[v97[3]];else do return;end end elseif (v98<=27) then v95[v97[2]]=v97[3] + v95[v97[4]] ;elseif (v98==28) then local v252=0;local v253;local v254;while true do if (v252==0) then v253=v97[2];v254={};v252=1;end if (1==v252) then for v390=1 + 0 , #v94 do local v391=0;local v392;while true do if (0==v391) then v392=v94[v390];for v435=0, #v392 do local v436=v392[v435];local v437=v436[1];local v438=v436[2];if ((v437==v95) and (v438>=v253)) then local v446=0;while true do if (v446==0) then v254[v438]=v437[v438];v436[1]=v254;break;end end end end break;end end end break;end end else v95[v97[2]]=v95[v97[7 -4 ]]%v97[4] ;end elseif (v98<=34) then if (v98<=31) then if (v98>30) then v95[v97[2]]= #v95[v97[3]];else v95[v97[3 -1 ]]=v73[v97[4 -1 ]];end elseif (v98<=32) then local v164=v97[2];local v165,v166=v88(v95[v164](v95[v164 + 1 ]));v90=(v166 + v164) -1 ;local v167=0;for v224=v164,v90 do local v225=0;while true do if (0==v225) then v167=v167 + 1 ;v95[v224]=v165[v167];break;end end end elseif (v98==33) then local v256=0;local v257;local v258;local v259;while true do if (1==v256) then v259={};v258=v18({},{[v7("\189\67\20\201\23\208\154","\81\226\28\125\167\115\181\226")]=function(v393,v394) local v395=v259[v394];return v395[1][v395[2]];end,[v7("\200\249\236\39\240\85\228\243\195\250","\138\151\166\130\66\135\60")]=function(v396,v397,v398) local v399=v259[v397];v399[1][v399[2]]=v398;end});v256=2;end if (v256==2) then for v401=1,v97[1059 -(87 + 968) ] do v89=v89 + (4 -3) ;local v402=v85[v89];if (v402[1]==65) then v259[v401-1 ]={v95,v402[3]};else v259[v401-1 ]={v72,v402[353 -(87 + 263) ]};end v94[ #v94 + (2 -1) ]=v259;end v95[v97[1415 -(447 + 966) ]]=v40(v257,v258,v73);break;end if (v256==0) then v257=v86[v97[3]];v258=nil;v256=1;end end else for v308=v97[5 -3 ],v97[183 -(67 + 113) ] do v95[v308]=nil;end end elseif (v98<=(28 + 9)) then if (v98<=35) then v89=v97[3];elseif (v98==36) then local v260=0;local v261;local v262;while true do if (v260==1) then v95[v261 + 1 ]=v262;v95[v261]=v262[v97[4]];break;end if (v260==0) then v261=v97[2];v262=v95[v97[3]];v260=1;end end else local v263=0;local v264;while true do if (v263==0) then v264=v97[2];v95[v264]=v95[v264](v95[v264 + 1 ]);break;end end end elseif (v98<=38) then local v169=0;local v170;while true do if (v169==0) then v170=v97[2];v95[v170](v95[v170 + 1 ]);break;end end elseif (v98>39) then v95[v97[2]]=v95[v97[7 -4 ]][v95[v97[4]]];else v95[v97[2]]=v95[v97[3]] + v97[4] ;end elseif (v98<=60) then if (v98<=50) then if (v98<=45) then if (v98<=42) then if (v98==(31 + 10)) then v89=v97[3];else local v172=0;local v173;local v174;while true do if (v172==1) then v95[v173 + 1 ]=v174;v95[v173]=v174[v97[4]];break;end if (v172==0) then v173=v97[2];v174=v95[v97[1820 -(1703 + 114) ]];v172=1;end end end elseif (v98<=43) then local v175=0;local v176;local v177;while true do if (v175==1) then for v342=v176 + 1 ,v90 do v15(v177,v95[v342]);end break;end if (v175==0) then v176=v97[2];v177=v95[v176];v175=1;end end elseif (v98==44) then v95[v97[7 -5 ]]=v97[3];else local v270=v97[2];do return v21(v95,v270,v90);end end elseif (v98<=47) then if (v98>46) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;else local v179=0;local v180;local v181;local v182;local v183;while true do if (v179==0) then v180=v97[703 -(376 + 325) ];v181,v182=v88(v95[v180](v95[v180 + 1 ]));v179=1;end if (v179==1) then v90=(v182 + v180) -1 ;v183=0 -0 ;v179=2;end if (v179==2) then for v343=v180,v90 do local v344=0;while true do if (v344==0) then v183=v183 + 1 ;v95[v343]=v181[v183];break;end end end break;end end end elseif (v98<=48) then local v184=0;local v185;local v186;local v187;while true do if (v184==0) then v185=v97[2];v186=v95[v185];v184=1;end if (v184==1) then v187=v95[v185 + 2 ];if (v187>0) then if (v186>v95[v185 + (953 -(802 + 150)) ]) then v89=v97[8 -5 ];else v95[v185 + 1 + 2 ]=v186;end elseif (v186<v95[v185 + (2 -1) ]) then v89=v97[3];else v95[v185 + 3 ]=v186;end break;end end elseif (v98==49) then v95[v97[2]]=v95[v97[3]];else v95[v97[3 -1 ]]=v73[v97[3]];end elseif (v98<=55) then if (v98<=(38 + 14)) then if (v98>51) then local v188=0;local v189;while true do if (v188==0) then v189=v97[2];do return v95[v189](v21(v95,v189 + 1 ,v97[3]));end break;end end else local v190=0;local v191;local v192;local v193;while true do if (v190==2) then if (v192>0) then if (v193<=v95[v191 + 1 ]) then local v415=0;while true do if (v415==0) then v89=v97[3];v95[v191 + 3 ]=v193;break;end end end elseif (v193>=v95[v191 + 1 ]) then local v416=0;while true do if (v416==0) then v89=v97[3];v95[v191 + 3 ]=v193;break;end end end break;end if (v190==0) then v191=v97[2];v192=v95[v191 + 2 ];v190=1;end if (1==v190) then v193=v95[v191] + v192 ;v95[v191]=v193;v190=2;end end end elseif (v98<=53) then v95[v97[2]]=v95[v97[3]][v95[v97[1001 -(915 + 82) ]]];elseif (v98>54) then v95[v97[2]]();else local v275=v97[5 -3 ];v95[v275]=v95[v275]();end elseif (v98<=57) then if (v98==56) then for v226=v97[2 + 0 ],v97[3] do v95[v226]=nil;end elseif  not v95[v97[2]] then v89=v89 + (15 -(9 + 5)) ;else v89=v97[379 -(85 + 291) ];end elseif (v98<=58) then local v196=v97[2];local v197,v198=v88(v95[v196](v21(v95,v196 + 1 ,v90)));v90=(v198 + v196) -1 ;local v199=0;for v228=v196,v90 do local v229=0;while true do if (v229==0) then v199=v199 + 1 ;v95[v228]=v197[v199];break;end end end elseif (v98>(1324 -(243 + 1022))) then v95[v97[2]][v95[v97[3]]]=v97[4];else local v280=0;local v281;local v282;local v283;while true do if (v280==1) then v283=v95[v281 + 2 ];if (v283>0) then if (v282>v95[v281 + 1 ]) then v89=v97[3];else v95[v281 + (3 -0) ]=v282;end elseif (v282<v95[v281 + 1 ]) then v89=v97[1190 -(1069 + 118) ];else v95[v281 + (6 -3) ]=v282;end break;end if (v280==0) then v281=v97[7 -5 ];v282=v95[v281];v280=1;end end end elseif (v98<=(153 -83)) then if (v98<=65) then if (v98<=62) then if (v98>61) then local v200=0;local v201;while true do if (v200==0) then v201=v97[2];v95[v201]=v95[v201](v21(v95,v201 + 1 ,v90));break;end end else local v202=0;local v203;local v204;local v205;while true do if (v202==0) then v203=v86[v97[3 + 0 ]];v204=nil;v202=1;end if (v202==2) then for v347=1,v97[4] do local v348=0;local v349;while true do if (v348==1) then if (v349[1]==65) then v205[v347-1 ]={v95,v349[3]};else v205[v347-1 ]={v72,v349[3]};end v94[ #v94 + 1 ]=v205;break;end if (v348==0) then v89=v89 + 1 + 0 ;v349=v85[v89];v348=1;end end end v95[v97[2]]=v40(v203,v204,v73);break;end if (v202==1) then v205={};v204=v18({},{[v7("\6\15\77\127\61\53\92","\17\89\80\36")]=function(v350,v351) local v352=v205[v351];return v352[1][v352[2]];end,[v7("\74\69\116\203\98\115\116\202\112\98","\174\21\26\26")]=function(v353,v354,v355) local v356=0;local v357;while true do if (v356==0) then v357=v205[v354];v357[1][v357[2]]=v355;break;end end end});v202=2;end end end elseif (v98<=(63 + 0)) then local v206=0;local v207;while true do if (v206==0) then v207=v97[2];do return v21(v95,v207,v90);end break;end end elseif (v98==(855 -(368 + 423))) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;else v95[v97[2]]=v95[v97[3]];end elseif (v98<=67) then if (v98>(207 -141)) then v95[v97[2]]=v95[v97[3]][v97[22 -(10 + 8) ]];else local v210=v97[2];local v211={};for v230=1, #v94 do local v231=0;local v232;while true do if (v231==0) then v232=v94[v230];for v383=0, #v232 do local v384=v232[v383];local v385=v384[1];local v386=v384[2];if ((v385==v95) and (v386>=v210)) then local v421=0;while true do if (v421==0) then v211[v386]=v385[v386];v384[1931 -(1869 + 61) ]=v211;break;end end end end break;end end end end elseif (v98<=68) then local v212=0;local v213;local v214;local v215;local v216;while true do if (v212==0) then v213=v97[2];v214,v215=v88(v95[v213](v21(v95,v213 + 1 + 0 ,v97[3])));v212=1;end if (v212==1) then v90=(v215 + v213) -1 ;v216=0;v212=2;end if (v212==2) then for v359=v213,v90 do local v360=0;while true do if (v360==0) then v216=v216 + 1 ;v95[v359]=v214[v216];break;end end end break;end end elseif (v98==69) then local v287=v97[2];v95[v287](v95[v287 + 1 ]);else v95[v97[2]]={};end elseif (v98<=75) then if (v98<=72) then if (v98==71) then local v217=0;local v218;local v219;while true do if (0==v217) then v218=v97[3];v219=v95[v218];v217=1;end if (v217==1) then for v361=v218 + 1 ,v97[4] do v219=v219   .. v95[v361] ;end v95[v97[2]]=v219;break;end end else do return v95[v97[6 -4 ]]();end end elseif (v98<=73) then if  not v95[v97[2]] then v89=v89 + (1 -0) ;else v89=v97[11 -8 ];end elseif (v98>74) then v95[v97[444 -(416 + 26) ]]=v95[v97[3]][v97[4]];else v95[v97[2]]=v72[v97[3]];end elseif (v98<=78) then if (v98<=76) then if v95[v97[1 + 1 ]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98>77) then local v295=v97[2];v95[v295]=v95[v295](v21(v95,v295 + 1 ,v90));else local v297=0;local v298;while true do if (v297==0) then v298=v97[2];v95[v298]=v95[v298](v21(v95,v298 + 1 ,v97[9 -6 ]));break;end end end elseif (v98<=79) then local v220=v97[2];local v221,v222=v88(v95[v220](v21(v95,v220 + 1 + 0 ,v90)));v90=(v222 + v220) -(1 + 0) ;local v223=0;for v233=v220,v90 do local v234=0;while true do if (v234==0) then v223=v223 + 1 ;v95[v233]=v221[v223];break;end end end elseif (v98>80) then do return;end else local v299=v97[3 -1 ];v95[v299](v21(v95,v299 + 1 ,v90));end v89=v89 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
