local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,1491 -(998 + 488) ),v7("\154\199","\156\180\233\229\210"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v99=v10(v8(v42,16));if v30 then local v111=0;local v112;while true do if (1==v111) then return v112;end if (v111==0) then v112=v13(v99,v30);v30=nil;v111=1;end end else return v99;end end end);local function v31(v43,v44,v45) if v45 then local v100=0;local v101;while true do if (v100==0) then v101=(v43/(2^(v44-1)))%(2^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v101-(v101%1) ;end end else local v102=0;local v103;while true do if (v102==0) then v103=2^(v44-(2 -1)) ;return (((v43%(v103 + v103))>=v103) and (1 -0)) or (0 -0) ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * (875 -(555 + 64))) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==3) then if (v58==(0 + 0)) then if (v57==0) then return v59 * (0 + 0) ;else v58=1;v56=931 -(857 + 74) ;end elseif (v58==2047) then return ((v57==0) and (v59 * ((569 -(367 + 201))/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end if (2==v53) then v58=v31(v55,21,31);v59=((v31(v55,32)==1) and  -1) or 1 ;v53=3;end if (1==v53) then v56=1;v57=(v31(v55,1,20) * (2^32)) + v54 ;v53=2;end if (v53==0) then v54=v34();v55=v34();v53=1;end end end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==0) then v62=nil;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=1;end if (v61==3) then return v14(v63);end if (v61==2) then v63={};for v113=1, #v62 do v63[v113]=v10(v9(v11(v62,v113,v113)));end v61=3;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=0;local v79;local v80;while true do if (v78==1) then if (v79==1) then v80=v32()~=(0 + 0) ;elseif (v79==(1140 -(116 + 1022))) then v80=v35();elseif (v79==3) then v80=v36();end v69[v77]=v80;break;end if (v78==0) then v79=v32();v80=nil;v78=1;end end end v67[3]=v32();for v81=4 -3 ,v34() do local v82=v32();if (v31(v82,1 + 0 ,1)==(0 + 0)) then local v107=0;local v108;local v109;local v110;while true do if (v107==1) then v110={v33(),v33(),nil,nil};if (v108==0) then local v121=0;while true do if (v121==0) then v110[3]=v33();v110[4]=v33();break;end end elseif (v108==1) then v110[3]=v34();elseif (v108==(2 + 0)) then v110[3]=v34() -(2^16) ;elseif (v108==(3 -0)) then local v132=0;while true do if (v132==0) then v110[3]=v34() -((1067 -(68 + 997))^16) ;v110[4]=v33();break;end end end v107=2;end if (v107==3) then if (v31(v109,3,3)==1) then v110[4]=v69[v110[4 + 0 ]];end v64[v81]=v110;break;end if (v107==0) then v108=v31(v82,2,3);v109=v31(v82,881 -(282 + 595) ,6);v107=1;end if (v107==2) then if (v31(v109,1,3 -2 )==1) then v110[1272 -(226 + 1044) ]=v69[v110[2]];end if (v31(v109,2,8 -6 )==1) then v110[3]=v69[v110[120 -(32 + 85) ]];end v107=3;end end end end for v83=1,v34() do v65[v83-(3 -2) ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[860 -(814 + 45) ];local v75=v71[2];local v76=v71[3];return function(...) local v85=v74;local v86=v75;local v87=v76;local v88=v38;local v89=1;local v90= -(2 -1);local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v104=0,v93 do if (v104>=v87) then v91[v104-v87 ]=v92[v104 + 1 ];else v95[v104]=v92[v104 + 1 + 0 ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do v97=v85[v89];v98=v97[1 + 0 ];if (v98<=(15 + 25)) then if (v98<=19) then if (v98<=9) then if (v98<=(889 -(261 + 624))) then if (v98<=(958 -(892 + 65))) then if (v98==0) then v95[v97[2]]=v95[v97[3]]%v97[4] ;else local v134=v86[v97[3]];local v135;local v136={};v135=v18({},{[v7("\119\113\52\11\15\77\86","\107\40\46\93\101")]=function(v223,v224) local v225=0;local v226;while true do if (v225==0) then v226=v136[v224];return v226[1][v226[2]];end end end,[v7("\13\233\142\43\255\4\76\54\211\152","\34\82\182\224\78\136\109")]=function(v227,v228,v229) local v230=0;local v231;while true do if (v230==0) then v231=v136[v228];v231[1][v231[4 -2 ]]=v229;break;end end end});for v232=1,v97[4] do local v233=0;local v234;while true do if (v233==1) then if (v234[1]==(81 -35)) then v136[v232-1 ]={v95,v234[3]};else v136[v232-1 ]={v72,v234[3]};end v94[ #v94 + 1 ]=v136;break;end if (v233==0) then v89=v89 + (1 -0) ;v234=v85[v89];v233=1;end end end v95[v97[2]]=v40(v134,v135,v73);end elseif (v98<=2) then local v138=v97[2];local v139=v95[v138];local v140=v95[v138 + 2 ];if (v140>0) then if (v139>v95[v138 + (1081 -(1020 + 60)) ]) then v89=v97[3];else v95[v138 + 3 ]=v139;end elseif (v139<v95[v138 + (1 -0) ]) then v89=v97[3];else v95[v138 + 3 ]=v139;end elseif (v98==(1426 -(630 + 793))) then v95[v97[2]]();else local v248=v97[6 -4 ];do return v21(v95,v248,v90);end end elseif (v98<=6) then if (v98==5) then v89=v97[3];else local v142=v97[352 -(87 + 263) ];local v143={};for v235=1, #v94 do local v236=v94[v235];for v249=0 -0 , #v236 do local v250=0;local v251;local v252;local v253;while true do if (0==v250) then v251=v236[v249];v252=v251[1 + 0 ];v250=1;end if (1==v250) then v253=v251[2];if ((v252==v95) and (v253>=v142)) then v143[v253]=v252[v253];v251[1]=v143;end break;end end end end end elseif (v98<=7) then v95[v97[2]]=v72[v97[3]];elseif (v98>8) then local v254=0;local v255;while true do if (v254==0) then v255=v97[2];do return v21(v95,v255,v90);end break;end end else v95[v97[6 -4 ]]={};end elseif (v98<=14) then if (v98<=(191 -(67 + 113))) then if (v98==10) then do return v95[v97[1915 -(1789 + 124) ]]();end else local v146=v97[2];v95[v146](v21(v95,v146 + 1 ,v90));end elseif (v98<=12) then v95[v97[2]]=v95[v97[3]][v97[4]];elseif (v98>13) then v95[v97[2]]=v97[3];else local v259=0;local v260;while true do if (v259==0) then v260=v97[2];v95[v260]=v95[v260](v95[v260 + 1 ]);break;end end end elseif (v98<=16) then if (v98>15) then if (v95[v97[2 + 0 ]]~=v97[4]) then v89=v89 + 1 + 0 ;else v89=v97[3];end else v95[v97[2]]=v95[v97[3]][v95[v97[4]]];end elseif (v98<=17) then local v151=v97[2];v95[v151]=v95[v151]();elseif (v98==18) then v95[v97[2]][v95[v97[7 -4 ]]]=v97[4];else v89=v97[3];end elseif (v98<=(70 -41)) then if (v98<=24) then if (v98<=21) then if (v98==20) then local v153=0;local v154;while true do if (v153==0) then v154=v97[2 + 0 ];do return v95[v154](v21(v95,v154 + 1 ,v97[3]));end break;end end else v95[v97[2]]= #v95[v97[3]];end elseif (v98<=22) then local v156=0;local v157;while true do if (v156==0) then v157=v97[7 -5 ];v95[v157](v21(v95,v157 + 1 ,v90));break;end end elseif (v98==23) then local v265=v97[2];local v266,v267=v88(v95[v265](v95[v265 + 1 ]));v90=(v267 + v265) -1 ;local v268=0;for v321=v265,v90 do local v322=0;while true do if (v322==0) then v268=v268 + 1 ;v95[v321]=v266[v268];break;end end end else do return;end end elseif (v98<=26) then if (v98==25) then v95[v97[2]]=v72[v97[1 + 2 ]];else local v160=0;local v161;while true do if (0==v160) then v161=v97[2];v95[v161]=v95[v161](v21(v95,v161 + 1 ,v90));break;end end end elseif (v98<=27) then v95[v97[2]]=v95[v97[3]] + v97[4] ;elseif (v98==28) then v95[v97[2]]=v95[v97[3]];elseif (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=34) then if (v98<=(123 -92)) then if (v98==30) then v95[v97[2 + 0 ]][v95[v97[3]]]=v95[v97[4]];elseif (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=32) then local v165=v97[2];local v166={};for v237=1, #v94 do local v238=0;local v239;while true do if (v238==0) then v239=v94[v237];for v383=1055 -(87 + 968) , #v239 do local v384=0;local v385;local v386;local v387;while true do if (v384==1) then v387=v385[2];if ((v386==v95) and (v387>=v165)) then local v427=0;while true do if (0==v427) then v166[v387]=v386[v387];v385[1]=v166;break;end end end break;end if (0==v384) then v385=v239[v383];v386=v385[1];v384=1;end end end break;end end end elseif (v98>33) then v95[v97[2]]= #v95[v97[3]];elseif (v95[v97[2]]~=v97[17 -13 ]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=37) then if (v98<=35) then local v167=v97[3];local v168=v95[v167];for v240=v167 + 1 ,v97[4] do v168=v168   .. v95[v240] ;end v95[v97[2]]=v168;elseif (v98==36) then local v273=0;local v274;while true do if (v273==0) then v274=v97[2 + 0 ];v95[v274](v95[v274 + 1 ]);break;end end else v95[v97[2]]=v97[3];end elseif (v98<=(990 -(802 + 150))) then local v170=0;local v171;local v172;while true do if (v170==0) then v171=v97[2];v172=v95[v171];v170=1;end if (1==v170) then for v351=v171 + 1 ,v90 do v15(v172,v95[v351]);end break;end end elseif (v98==(104 -65)) then v95[v97[2]]=v97[5 -2 ] + v95[v97[3 + 1 ]] ;else v95[v97[2]]=v95[v97[6 -3 ]] + v97[4] ;end elseif (v98<=(1473 -(447 + 966))) then if (v98<=50) then if (v98<=45) then if (v98<=42) then if (v98>(1038 -(915 + 82))) then local v173=v97[5 -3 ];local v174=v95[v173];for v241=v173 + (2 -1) ,v90 do v15(v174,v95[v241]);end elseif v95[v97[2]] then v89=v89 + 1 ;else v89=v97[1820 -(1703 + 114) ];end elseif (v98<=43) then v95[v97[2]][v95[v97[3]]]=v97[4];elseif (v98>44) then local v280=0;local v281;while true do if (v280==0) then v281=v97[2];v95[v281]=v95[v281](v21(v95,v281 + (702 -(376 + 325)) ,v90));break;end end else v95[v97[2]]=v97[3] + v95[v97[4]] ;end elseif (v98<=(28 + 19)) then if (v98==46) then v95[v97[2]]=v95[v97[3]];else local v179=v97[2];v95[v179]=v95[v179](v21(v95,v179 + 1 ,v97[3]));end elseif (v98<=48) then do return;end elseif (v98==(79 -30)) then if  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else local v283=0;local v284;local v285;local v286;local v287;while true do if (v283==1) then v90=(v286 + v284) -(1 -0) ;v287=1187 -(1069 + 118) ;v283=2;end if (v283==2) then for v403=v284,v90 do v287=v287 + 1 ;v95[v403]=v285[v287];end break;end if (0==v283) then v284=v97[2];v285,v286=v88(v95[v284](v95[v284 + (2 -1) ]));v283=1;end end end elseif (v98<=(120 -65)) then if (v98<=(66 -(9 + 5))) then if (v98>51) then local v181=v97[2];v95[v181]=v95[v181]();else local v183=0;local v184;local v185;while true do if (1==v183) then for v353=v184 + 1 ,v97[4] do v185=v185   .. v95[v353] ;end v95[v97[2]]=v185;break;end if (v183==0) then v184=v97[3];v185=v95[v184];v183=1;end end end elseif (v98<=53) then do return v95[v97[2]]();end elseif (v98>54) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];else v95[v97[4 -2 ]]=v73[v97[3]];end elseif (v98<=(124 -67)) then if (v98>(432 -(85 + 291))) then for v242=v97[2],v97[3] do v95[v242]=nil;end else v95[v97[2]]();end elseif (v98<=58) then local v186=0;local v187;local v188;local v189;while true do if (v186==1) then v189={};v188=v18({},{[v7("\228\221\139\240\223\231\154","\158\187\130\226")]=function(v354,v355) local v356=0;local v357;while true do if (v356==0) then v357=v189[v355];return v357[1][v357[2]];end end end,[v7("\1\0\247\244\41\54\247\245\59\39","\145\94\95\153")]=function(v358,v359,v360) local v361=v189[v359];v361[1][v361[2]]=v360;end});v186=2;end if (v186==0) then v187=v86[v97[3]];v188=nil;v186=1;end if (v186==2) then for v363=1,v97[4] do local v364=0;local v365;while true do if (v364==0) then v89=v89 + 1 ;v365=v85[v89];v364=1;end if (v364==1) then if (v365[1]==46) then v189[v363-1 ]={v95,v365[3]};else v189[v363-1 ]={v72,v365[1 + 2 ]};end v94[ #v94 + 1 ]=v189;break;end end end v95[v97[2]]=v40(v187,v188,v73);break;end end elseif (v98==59) then local v292=v97[2];local v293,v294=v88(v95[v292](v21(v95,v292 + 1 ,v90)));v90=(v294 + v292) -1 ;local v295=0 -0 ;for v332=v292,v90 do v295=v295 + 1 ;v95[v332]=v293[v295];end else v95[v97[1267 -(243 + 1022) ]]=v73[v97[3]];end elseif (v98<=70) then if (v98<=65) then if (v98<=62) then if (v98==61) then v95[v97[2]]={};else local v191=v97[2];local v192,v193=v88(v95[v191](v21(v95,v191 + 1 ,v97[3])));v90=(v193 + v191) -1 ;local v194=0 -0 ;for v244=v191,v90 do local v245=0;while true do if (v245==0) then v194=v194 + 1 + 0 ;v95[v244]=v192[v194];break;end end end end elseif (v98<=63) then local v195=v97[2];local v196=v95[v97[3]];v95[v195 + 1 ]=v196;v95[v195]=v196[v97[4]];elseif (v98>64) then local v298=v97[2];local v299=v95[v298];local v300=v95[v298 + 2 + 0 ];if (v300>(1180 -(1123 + 57))) then if (v299>v95[v298 + 1 ]) then v89=v97[794 -(368 + 423) ];else v95[v298 + 3 ]=v299;end elseif (v299<v95[v298 + 1 ]) then v89=v97[3];else v95[v298 + 3 ]=v299;end elseif  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=(210 -143)) then if (v98>66) then local v200=0;local v201;local v202;local v203;local v204;while true do if (v200==2) then for v369=v201,v90 do v204=v204 + 1 ;v95[v369]=v202[v204];end break;end if (v200==0) then v201=v97[2];v202,v203=v88(v95[v201](v21(v95,v201 + (19 -(10 + 8)) ,v97[3])));v200=1;end if (1==v200) then v90=(v203 + v201) -1 ;v204=0;v200=2;end end elseif v95[v97[7 -5 ]] then v89=v89 + (255 -(163 + 91)) ;else v89=v97[3];end elseif (v98<=68) then for v246=v97[2],v97[3] do v95[v246]=nil;end elseif (v98>69) then v95[v97[2]]=v95[v97[1933 -(1869 + 61) ]]%v95[v97[4]] ;else v95[v97[2]]=v95[v97[3]][v95[v97[4]]];end elseif (v98<=75) then if (v98<=72) then if (v98==71) then local v205=v97[2];local v206=v95[v97[445 -(416 + 26) ]];v95[v205 + 1 + 0 ]=v206;v95[v205]=v206[v97[4]];else local v210=0;local v211;local v212;local v213;local v214;while true do if (0==v210) then v211=v97[6 -4 ];v212,v213=v88(v95[v211](v21(v95,v211 + 1 ,v90)));v210=1;end if (v210==2) then for v372=v211,v90 do v214=v214 + 1 + 0 ;v95[v372]=v212[v214];end break;end if (1==v210) then v90=(v213 + v211) -1 ;v214=0;v210=2;end end end elseif (v98<=73) then local v215=v97[2];local v216=v95[v215 + (6 -4) ];local v217=v95[v215] + v216 ;v95[v215]=v217;if (v216>0) then if (v217<=v95[v215 + 1 ]) then local v375=0;while true do if (v375==0) then v89=v97[3];v95[v215 + 3 ]=v217;break;end end end elseif (v217>=v95[v215 + 1 ]) then local v376=0;while true do if (v376==0) then v89=v97[3];v95[v215 + 3 ]=v217;break;end end end elseif (v98>(130 -56)) then local v305=0;local v306;local v307;local v308;while true do if (v305==2) then if (v307>0) then if (v308<=v95[v306 + (439 -(145 + 293)) ]) then local v425=0;while true do if (v425==0) then v89=v97[3];v95[v306 + 3 ]=v308;break;end end end elseif (v308>=v95[v306 + 1 ]) then local v426=0;while true do if (v426==0) then v89=v97[3];v95[v306 + 3 ]=v308;break;end end end break;end if (0==v305) then v306=v97[2];v307=v95[v306 + (2 -0) ];v305=1;end if (v305==1) then v308=v95[v306] + v307 ;v95[v306]=v308;v305=2;end end else local v309=0;local v310;while true do if (v309==0) then v310=v97[2];v95[v310](v95[v310 + 1 ]);break;end end end elseif (v98<=78) then if (v98<=76) then v95[v97[432 -(44 + 386) ]]=v95[v97[3]][v97[4]];elseif (v98==77) then local v311=0;local v312;while true do if (0==v311) then v312=v97[2];v95[v312]=v95[v312](v21(v95,v312 + (1 -0) ,v97[3 + 0 ]));break;end end else local v313=0;local v314;while true do if (0==v313) then v314=v97[2];do return v95[v314](v21(v95,v314 + 1 ,v97[3]));end break;end end end elseif (v98<=79) then local v221=0;local v222;while true do if (v221==0) then v222=v97[2];v95[v222]=v95[v222](v95[v222 + 1 ]);break;end end elseif (v98>80) then v95[v97[1476 -(1329 + 145) ]]=v95[v97[3]]%v95[v97[4]] ;else v95[v97[2]]=v95[v97[3]]%v97[4] ;end v89=v89 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
